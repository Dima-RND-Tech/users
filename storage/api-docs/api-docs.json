{
    "openapi": "3.0.0",
    "info": {
        "title": "User Management System API",
        "description": "API Endpoints for getting and changing users, groups & roles",
        "version": "0.9"
    },
    "servers": [
        {
            "url": "http://project.local/api",
            "description": "Local"
        }
    ],
    "paths": {
        "/groups": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Gets list of all user groups",
                "description": "This API Endpoint returns lists of all user groups.",
                "operationId": "GroupsList",
                "responses": {
                    "200": {
                        "description": "Successfull Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Group"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Groups"
                ],
                "summary": "Creates a new group",
                "description": "This API Endpoint creates a new group.",
                "operationId": "GroupsCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfull Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ResponseGroup",
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Group"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/groups/{groupId}": {
            "delete": {
                "tags": [
                    "Groups"
                ],
                "summary": "Deletes a group",
                "description": "This API Endpoint deletes a group.",
                "operationId": "GroupsDelete",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "Group ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Gets list of all user roles",
                "description": "This API Endpoint returns lists of all user roles.",
                "operationId": "RolesList",
                "responses": {
                    "200": {
                        "description": "Successfull Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Role"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Gets list of all users",
                "description": "This API Endpoint returns lists of all existing users.",
                "operationId": "UsersList",
                "responses": {
                    "200": {
                        "description": "Successfull Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Creates a new user",
                "description": "This API Endpoint creates a new user.",
                "operationId": "UsersCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfull Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "ResponseUser",
                                    "type": "object",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Gets a user by ID",
                "description": "This API Endpoint get a user by ID.",
                "operationId": "UsersGet",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfull Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Deletes a user",
                "description": "This API Endpoint deletes a user.",
                "operationId": "UsersDelete",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfull Operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/{userId}/groups/{groupId}/assign": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Assigns a user to a group",
                "description": "This API Endpoint assigns users to groups.",
                "operationId": "UsersGroupsAssign",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "Group ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfull Operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/{userId}/groups": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get groups of a user",
                "description": "This API Endpoint get groups of a user.",
                "operationId": "UsersGroupsGet",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfull Operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Group"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/{userId}/groups/{groupId}/revoke": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Removes a user from a group",
                "description": "This API Endpoint removes users from groups.",
                "operationId": "UsersGroupsRevoke",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "Group ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Revoked"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Group": {
                "description": "Group Resource",
                "properties": {
                    "id": {
                        "description": "Group ID",
                        "type": "integer",
                        "example": 0
                    },
                    "name": {
                        "description": "Group name",
                        "type": "string",
                        "maxLength": 64,
                        "example": "Developers"
                    }
                },
                "type": "object"
            },
            "Role": {
                "description": "Role Resource",
                "properties": {
                    "id": {
                        "description": "Role ID",
                        "type": "integer",
                        "example": 0
                    },
                    "name": {
                        "description": "Role name",
                        "type": "string",
                        "maxLength": 32,
                        "example": "Administator"
                    }
                },
                "type": "object"
            },
            "User": {
                "description": "User Resource",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 0
                    },
                    "roleId": {
                        "description": "Role ID",
                        "type": "integer",
                        "example": 0
                    },
                    "name": {
                        "description": "User name",
                        "type": "string",
                        "maxLength": 64,
                        "example": "John"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "token": {
                "type": "apiKey",
                "name": "x-api-key",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "token": []
        }
    ]
}